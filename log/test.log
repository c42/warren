  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.4ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.4ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mSHOW TABLES[0m
  [4;35;1mBottle Columns (26.2ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.4ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mBottle Columns (1.3ms)[0m   [0;1mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.4ms)[0m   [0mshow tables[0m
  [4;36;1mBottle Columns (1.3ms)[0m   [0;1mSHOW FIELDS FROM `bottles`[0m
  [4;35;1mSQL (0.0ms)[0m   [0mMysql::Error: Table 'warren_test.read_only_bottles' doesn't exist: CREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.2ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.4ms)[0m   [0mshow tables[0m
  [4;36;1mBottle Columns (1.5ms)[0m   [0;1mSHOW FIELDS FROM `bottles`[0m
  [4;35;1mSQL (0.0ms)[0m   [0mMysql::Error: Table 'warren_test.read_only_bottles' doesn't exist: CREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.4ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.4ms)[0m   [0mshow tables[0m
  [4;36;1mBottle Columns (1.3ms)[0m   [0;1mSHOW FIELDS FROM `bottles`[0m
  [4;35;1mSQL (0.0ms)[0m   [0mMysql::Error: Table 'warren_test.read_only_bottles' doesn't exist: CREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.5ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.7ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.4ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES(NULL, NULL, NULL)[0m
  [4;36;1mSQL (0.7ms)[0m   [0;1mCOMMIT[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.9ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.6ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.5ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.9ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (0.6ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (15.4ms)[0m   [0;1m CREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END ;[0m
  [4;35;1mSQL (43.9ms)[0m   [0m CREATE TRIGGER clone_update_bottles_row AFTER UPDATE ON bottles FOR EACH ROW BEGIN UPDATE read_only_bottles SET id = NEW.id, type = NEW.type, name = NEW.name, universe_id = NEW.universe_id; END ;[0m
  [4;36;1mSQL (1.8ms)[0m   [0;1m CREATE TRIGGER clone_delete_bottles_row AFTER DELETE ON bottles FOR EACH ROW BEGIN DELETE FROM read_only_bottles WHERE id = OLD.id; END ;[0m
  [4;35;1mSQL (0.5ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (2.0ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (0.5ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mMysql::Error: This version of MySQL doesn't yet support 'multiple triggers with the same action time and event for one table': CREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END ;[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.6ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.6ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (1.5ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mMysql::Error: This version of MySQL doesn't yet support 'multiple triggers with the same action time and event for one table': CREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.6ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.8ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (0.4ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mMysql::Error: This version of MySQL doesn't yet support 'multiple triggers with the same action time and event for one table': CREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.6ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (1.1ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (0.6ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mMysql::Error: This version of MySQL doesn't yet support 'multiple triggers with the same action time and event for one table': CREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (34.1ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (0.6ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mMysql::Error: This version of MySQL doesn't yet support 'multiple triggers with the same action time and event for one table': CREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (45.7ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.8ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (0.7ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mMysql::Error: This version of MySQL doesn't yet support 'multiple triggers with the same action time and event for one table': CREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.6ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.6ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (0.5ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.7ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (0.4ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mshow tables[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.9ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (0.4ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mshow tables[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.7ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (0.7ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.4ms)[0m   [0mshow tables[0m
  [4;36;1mBottle Columns (1.4ms)[0m   [0;1mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.6ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (0.3ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mshow tables[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (0.8ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (0.5ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mshow tables[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (0.4ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mshow tables[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (0.4ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.7ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (1.5ms)[0m   [0mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;36;1mSQL (68.7ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;35;1mSQL (3.0ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mMysql::Error: This version of MySQL doesn't yet support 'multiple triggers with the same action time and event for one table': CREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;35;1mSQL (0.4ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.7ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (1.4ms)[0m   [0mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;36;1mSQL (2.9ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;35;1mSQL (3.0ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mMysql::Error: This version of MySQL doesn't yet support 'multiple triggers with the same action time and event for one table': CREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;35;1mSQL (0.4ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.6ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.8ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (1.5ms)[0m   [0mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;36;1mSQL (2.8ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;35;1mSQL (3.9ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mMysql::Error: This version of MySQL doesn't yet support 'multiple triggers with the same action time and event for one table': CREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;35;1mSQL (0.4ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (2.2ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (1.9ms)[0m   [0mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;36;1mSQL (4.6ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;35;1mSQL (4.5ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mMysql::Error: This version of MySQL doesn't yet support 'multiple triggers with the same action time and event for one table': CREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END ;[0m
  [4;35;1mSQL (0.6ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mBottle Columns (1.8ms)[0m   [0;1mSHOW FIELDS FROM `bottles`[0m
  [4;35;1mSQL (0.8ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.4ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (1.5ms)[0m   [0;1mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;35;1mSQL (3.0ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (2.9ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;35;1mSQL (0.0ms)[0m   [0mMysql::Error: This version of MySQL doesn't yet support 'multiple triggers with the same action time and event for one table': CREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END ;[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.6ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.7ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (1.4ms)[0m   [0mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;36;1mSQL (3.0ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;35;1mSQL (2.8ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mMysql::Error: This version of MySQL doesn't yet support 'multiple triggers with the same action time and event for one table': CREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;35;1mSQL (0.4ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.7ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.8ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (36.6ms)[0m   [0mDROP TRIGGER IF EXISTS bottles.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mDROP TRIGGER IF EXISTS bottles.clone_update_bottles_row[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS bottles.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS bottles.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS bottles.clone_update_bottles_row[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS bottles.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS bottles.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mDROP TRIGGER IF EXISTS bottles.clone_update_bottles_row[0m
  [4;35;1mSQL (1.1ms)[0m   [0mDROP TRIGGER IF EXISTS bottles.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS bottles.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS bottles.clone_update_bottles_row[0m
  [4;35;1mSQL (0.4ms)[0m   [0mDROP TRIGGER IF EXISTS bottles.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS bottles.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS bottles.clone_update_bottles_row[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS bottles.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.2ms)[0m   [0mDROP TRIGGER IF EXISTS bottles.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS bottles.clone_update_bottles_row[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS bottles.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (1.5ms)[0m   [0mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;36;1mSQL (3.0ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;35;1mSQL (2.7ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mMysql::Error: This version of MySQL doesn't yet support 'multiple triggers with the same action time and event for one table': CREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;35;1mSQL (0.4ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS bottles.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS bottles.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS bottles.clone_delete_bottles_row[0m
  [4;35;1mSQL (1.1ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS bottles.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS bottles.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS bottles.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.9ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (1.6ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.4ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.6ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (1.4ms)[0m   [0mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;36;1mSQL (2.9ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;35;1mSQL (2.8ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mMysql::Error: This version of MySQL doesn't yet support 'multiple triggers with the same action time and event for one table': CREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;35;1mSQL (0.4ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mSQL (0.4ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mBottle Columns (1.6ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (1.7ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (1.6ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (1.4ms)[0m   [0mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;36;1mSQL (3.0ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;35;1mSQL (2.9ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mMysql::Error: This version of MySQL doesn't yet support 'multiple triggers with the same action time and event for one table': CREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;35;1mSQL (0.5ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mSQL (0.5ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mBottle Columns (36.0ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (1.8ms)[0m   [0mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;36;1mSQL (4.7ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;35;1mSQL (5.1ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mMysql::Error: This version of MySQL doesn't yet support 'multiple triggers with the same action time and event for one table': CREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;35;1mSQL (0.4ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mSQL (3.2ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (17.4ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mBottle Columns (75.0ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.6ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (2.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (1.9ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.7ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (1.8ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.4ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.7ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.6ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (1.4ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (1.7ms)[0m   [0mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;36;1mSQL (4.4ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;35;1mSQL (5.2ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mMysql::Error: This version of MySQL doesn't yet support 'multiple triggers with the same action time and event for one table': CREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;35;1mSQL (0.3ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mSQL (1.3ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mBottle Columns (1.5ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.8ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (1.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.8ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (2.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (2.4ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.4ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (2.3ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (2.0ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (1.3ms)[0m   [0mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;36;1mSQL (4.6ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;35;1mSQL (4.0ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mMysql::Error: This version of MySQL doesn't yet support 'multiple triggers with the same action time and event for one table': CREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;35;1mSQL (0.4ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mSQL (3.2ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (3.6ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (9.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (7.9ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mBottle Columns (1.5ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.9ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.6ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (1.9ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (2.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.7ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.3ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (2.7ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.7ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (1.9ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (1.5ms)[0m   [0mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;36;1mSQL (4.7ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;35;1mSQL (5.0ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mMysql::Error: This version of MySQL doesn't yet support 'multiple triggers with the same action time and event for one table': CREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;35;1mSQL (0.3ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mSQL (0.7ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (4.9ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (1.8ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.3ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mBottle Columns (2.0ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.6ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (2.0ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (1.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.5ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mshow tables[0m
  [4;35;1mSQL (1.6ms)[0m   [0mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;36;1mSQL (5.6ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;35;1mSQL (7.2ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mMysql::Error: This version of MySQL doesn't yet support 'multiple triggers with the same action time and event for one table': CREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;35;1mSQL (0.4ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mSQL (0.5ms)[0m   [0mshow tables[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (5.5ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mSQL (1.2ms)[0m   [0mSHOW TRIGGERS LIKE 'bottles'[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mSQL (1.2ms)[0m   [0mSHOW TRIGGERS LIKE 'bottles'[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.5ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (2.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.5ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (1.4ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (1.3ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (2.7ms)[0m   [0;1mSHOW TABLES[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mSQL (1.4ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (1.9ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (2.1ms)[0m   [0;1mSHOW TRIGGERS LIKE 'bottles'[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mBottle Columns (1.2ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.9ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (1.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.9ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.6ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.4ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (1.8ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (1.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.4ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (1.3ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.5ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (1.5ms)[0m   [0;1mSHOW TABLES[0m
  [4;35;1mSQL (1.3ms)[0m   [0mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;36;1mSQL (4.2ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;35;1mSQL (5.1ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mMysql::Error: This version of MySQL doesn't yet support 'multiple triggers with the same action time and event for one table': CREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;35;1mSQL (0.3ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mSQL (9.7ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (11.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (1.5ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (10.4ms)[0m   [0;1mSHOW TRIGGERS LIKE 'bottles'[0m
  [4;35;1mSQL (1.0ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mSQL (1.4ms)[0m   [0mSHOW TRIGGERS LIKE 'bottles'[0m
  [4;36;1mSQL (1.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.4ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mSQL (1.2ms)[0m   [0mSHOW TRIGGERS LIKE 'bottles'[0m
  [4;36;1mSQL (1.6ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (2.0ms)[0m   [0;1mSHOW TRIGGERS LIKE 'bottles'[0m
  [4;35;1mSQL (0.5ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.5ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.3ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.9ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (2.5ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (2.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.7ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (2.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (1.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.6ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (1.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.7ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (1.1ms)[0m   [0;1mSHOW TABLES[0m
  [4;35;1mSQL (1.3ms)[0m   [0mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;36;1mSQL (4.1ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;35;1mSQL (6.5ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mMysql::Error: This version of MySQL doesn't yet support 'multiple triggers with the same action time and event for one table': CREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;35;1mSQL (0.5ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mSQL (0.9ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (0.6ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.7ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (3.5ms)[0m   [0;1mSHOW TRIGGERS LIKE 'bottles'[0m
  [4;35;1mSQL (0.8ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (7.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mBottle Columns (2.2ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (2.4ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.3ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.3ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mSHOW TABLES[0m
  [4;35;1mSQL (1.8ms)[0m   [0mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;36;1mSQL (4.1ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;35;1mSQL (4.3ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mMysql::Error: This version of MySQL doesn't yet support 'multiple triggers with the same action time and event for one table': CREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;35;1mSQL (0.4ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mSQL (0.5ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.8ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (3.0ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (3.2ms)[0m   [0;1mSHOW TRIGGERS LIKE 'bottles'[0m
  [4;35;1mSQL (0.6ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (4.9ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (1.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (4.9ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.8ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.9ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.4ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mSHOW TABLES[0m
  [4;35;1mSQL (3.5ms)[0m   [0mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;36;1mSQL (6.5ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;35;1mSQL (4.8ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mMysql::Error: This version of MySQL doesn't yet support 'multiple triggers with the same action time and event for one table': CREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;35;1mSQL (0.3ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (4.5ms)[0m   [0;1mSHOW TRIGGERS LIKE 'bottles'[0m
  [4;35;1mSQL (7.4ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (1.5ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.5ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (1.4ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (1.7ms)[0m   [0;1mSHOW TRIGGERS LIKE 'bottles'[0m
  [4;35;1mSQL (2.0ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (2.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (1.4ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mSQL (1.2ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (0.9ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mSHOW TABLES[0m
  [4;35;1mSQL (1.2ms)[0m   [0mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;36;1mSQL (4.3ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;35;1mSQL (5.1ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;36;1mSQL (0.0ms)[0m   [0;1mMysql::Error: This version of MySQL doesn't yet support 'multiple triggers with the same action time and event for one table': CREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;35;1mSQL (0.4ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mBottle Columns (2.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (1.3ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (2.0ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (1.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.3ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.3ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (1.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.4ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (2.8ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (2.2ms)[0m   [0;1mSHOW TRIGGERS LIKE 'bottles'[0m
  [4;35;1mSQL (0.6ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;35;1mSQL (1.4ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSHOW TABLES[0m
  [4;35;1mSQL (1.5ms)[0m   [0mSHOW TRIGGERS LIKE 'bottles'[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS information_schema.clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS information_schema.clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;35;1mSQL (1.3ms)[0m   [0mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;36;1mSQL (1.5ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.6ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (1.4ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.3ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (1.4ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (1.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.6ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (1.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (1.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.4ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (3.2ms)[0m   [0;1mSHOW TRIGGERS LIKE 'bottles'[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;35;1mSQL (2.4ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (1.4ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (7.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.6ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mSHOW TABLES[0m
  [4;35;1mSQL (5.9ms)[0m   [0mSHOW TRIGGERS LIKE 'bottles'[0m
  [4;36;1mSQL (1.5ms)[0m   [0;1mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;35;1mSQL (4.2ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (5.7ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;35;1mSQL (1.0ms)[0m   [0mCREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (1.1ms)[0m   [0;1mCREATE TRIGGER clone_update_bottles_row AFTER UPDATE ON bottles FOR EACH ROW BEGIN UPDATE read_only_bottles SET id = NEW.id, type = NEW.type, name = NEW.name, universe_id = NEW.universe_id; END;[0m
  [4;35;1mSQL (0.9ms)[0m   [0mCREATE TRIGGER clone_delete_bottles_row AFTER DELETE ON bottles FOR EACH ROW BEGIN DELETE FROM read_only_bottles WHERE id = OLD.id; END;[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mSHOW TABLES[0m
  [4;35;1mSQL (0.4ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.9ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;35;1mSQL (0.6ms)[0m   [0mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;35;1mBottle Columns (6.2ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (1.3ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.4ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (1.4ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.5ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.7ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (1.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.6ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.6ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (1.7ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.3ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (9.4ms)[0m   [0;1mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;35;1mSQL (4.7ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (4.6ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;35;1mSQL (0.9ms)[0m   [0mCREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (0.9ms)[0m   [0;1mCREATE TRIGGER clone_update_bottles_row AFTER UPDATE ON bottles FOR EACH ROW BEGIN UPDATE read_only_bottles SET id = NEW.id, type = NEW.type, name = NEW.name, universe_id = NEW.universe_id; END;[0m
  [4;35;1mSQL (0.8ms)[0m   [0mCREATE TRIGGER clone_delete_bottles_row AFTER DELETE ON bottles FOR EACH ROW BEGIN DELETE FROM read_only_bottles WHERE id = OLD.id; END;[0m
  [4;36;1mSQL (1.4ms)[0m   [0;1mSHOW TRIGGERS LIKE 'bottles'[0m
  [4;35;1mSQL (1.0ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.7ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;35;1mSQL (0.6ms)[0m   [0mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;35;1mSQL (2.2ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (2.0ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.7ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (1.5ms)[0m   [0;1mSHOW TABLES[0m
  [4;35;1mSQL (3.8ms)[0m   [0mSHOW TRIGGERS LIKE 'bottles'[0m
  [4;36;1mSQL (1.5ms)[0m   [0;1mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;35;1mSQL (4.1ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (4.6ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;35;1mSQL (1.3ms)[0m   [0mCREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (1.2ms)[0m   [0;1mCREATE TRIGGER clone_update_bottles_row AFTER UPDATE ON bottles FOR EACH ROW BEGIN UPDATE read_only_bottles SET id = NEW.id, type = NEW.type, name = NEW.name, universe_id = NEW.universe_id; END;[0m
  [4;35;1mSQL (0.9ms)[0m   [0mCREATE TRIGGER clone_delete_bottles_row AFTER DELETE ON bottles FOR EACH ROW BEGIN DELETE FROM read_only_bottles WHERE id = OLD.id; END;[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mSHOW TABLES[0m
  [4;35;1mSQL (0.4ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.7ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;35;1mSQL (1.0ms)[0m   [0mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;35;1mBottle Columns (1.2ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (2.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.7ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.6ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (1.2ms)[0m   [0;1mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;35;1mSQL (4.4ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (4.6ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;35;1mSQL (0.9ms)[0m   [0mCREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCREATE TRIGGER clone_update_bottles_row AFTER UPDATE ON bottles FOR EACH ROW BEGIN UPDATE read_only_bottles SET id = NEW.id, type = NEW.type, name = NEW.name, universe_id = NEW.universe_id; END;[0m
  [4;35;1mSQL (0.9ms)[0m   [0mCREATE TRIGGER clone_delete_bottles_row AFTER DELETE ON bottles FOR EACH ROW BEGIN DELETE FROM read_only_bottles WHERE id = OLD.id; END;[0m
  [4;36;1mSQL (1.7ms)[0m   [0;1mSHOW TRIGGERS LIKE 'bottles'[0m
  [4;35;1mSQL (0.7ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.8ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;35;1mSQL (0.6ms)[0m   [0mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;35;1mSQL (0.5ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.6ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mSHOW TABLES[0m
  [4;35;1mSQL (4.6ms)[0m   [0mSHOW TRIGGERS LIKE 'bottles'[0m
  [4;36;1mSQL (1.3ms)[0m   [0;1mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;35;1mSQL (4.8ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (6.5ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;35;1mSQL (1.3ms)[0m   [0mCREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCREATE TRIGGER clone_update_bottles_row AFTER UPDATE ON bottles FOR EACH ROW BEGIN UPDATE read_only_bottles SET id = NEW.id, type = NEW.type, name = NEW.name, universe_id = NEW.universe_id; END;[0m
  [4;35;1mSQL (0.9ms)[0m   [0mCREATE TRIGGER clone_delete_bottles_row AFTER DELETE ON bottles FOR EACH ROW BEGIN DELETE FROM read_only_bottles WHERE id = OLD.id; END;[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mSHOW TABLES[0m
  [4;35;1mSQL (0.7ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.7ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;35;1mSQL (1.0ms)[0m   [0mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.7ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.9ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (1.2ms)[0m   [0;1mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;35;1mSQL (4.6ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (4.7ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;35;1mSQL (0.9ms)[0m   [0mCREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (1.5ms)[0m   [0;1mCREATE TRIGGER clone_update_bottles_row AFTER UPDATE ON bottles FOR EACH ROW BEGIN UPDATE read_only_bottles SET id = NEW.id, type = NEW.type, name = NEW.name, universe_id = NEW.universe_id; END;[0m
  [4;35;1mSQL (0.9ms)[0m   [0mCREATE TRIGGER clone_delete_bottles_row AFTER DELETE ON bottles FOR EACH ROW BEGIN DELETE FROM read_only_bottles WHERE id = OLD.id; END;[0m
  [4;36;1mSQL (1.4ms)[0m   [0;1mSHOW TRIGGERS LIKE 'bottles'[0m
  [4;35;1mSQL (0.7ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.7ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;35;1mSQL (0.8ms)[0m   [0mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;35;1mSQL (0.5ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mSHOW TABLES[0m
  [4;35;1mSQL (1.0ms)[0m   [0mSHOW TRIGGERS LIKE 'bottles'[0m
  [4;36;1mSQL (1.4ms)[0m   [0;1mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;35;1mSQL (9.0ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (4.5ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;35;1mSQL (1.0ms)[0m   [0mCREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (1.1ms)[0m   [0;1mCREATE TRIGGER clone_update_bottles_row AFTER UPDATE ON bottles FOR EACH ROW BEGIN UPDATE read_only_bottles SET id = NEW.id, type = NEW.type, name = NEW.name, universe_id = NEW.universe_id; END;[0m
  [4;35;1mSQL (1.0ms)[0m   [0mCREATE TRIGGER clone_delete_bottles_row AFTER DELETE ON bottles FOR EACH ROW BEGIN DELETE FROM read_only_bottles WHERE id = OLD.id; END;[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mSHOW TABLES[0m
  [4;35;1mSQL (0.4ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.8ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;35;1mSQL (0.6ms)[0m   [0mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.9ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (1.6ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.5ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.9ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.4ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.4ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (4.2ms)[0m   [0;1mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;35;1mSQL (4.9ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (4.6ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;35;1mSQL (0.9ms)[0m   [0mCREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (0.9ms)[0m   [0;1mCREATE TRIGGER clone_update_bottles_row AFTER UPDATE ON bottles FOR EACH ROW BEGIN UPDATE read_only_bottles SET id = NEW.id, type = NEW.type, name = NEW.name, universe_id = NEW.universe_id; END;[0m
  [4;35;1mSQL (0.8ms)[0m   [0mCREATE TRIGGER clone_delete_bottles_row AFTER DELETE ON bottles FOR EACH ROW BEGIN DELETE FROM read_only_bottles WHERE id = OLD.id; END;[0m
  [4;36;1mSQL (1.6ms)[0m   [0;1mSHOW TRIGGERS LIKE 'bottles'[0m
  [4;35;1mSQL (1.0ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.7ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;35;1mSQL (0.6ms)[0m   [0mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;35;1mSQL (5.2ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (1.5ms)[0m   [0;1mSHOW TABLES[0m
  [4;35;1mSQL (2.7ms)[0m   [0mSHOW TRIGGERS LIKE 'bottles'[0m
  [4;36;1mSQL (1.9ms)[0m   [0;1mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;35;1mSQL (4.1ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (4.6ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;35;1mSQL (0.8ms)[0m   [0mCREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (0.9ms)[0m   [0;1mCREATE TRIGGER clone_update_bottles_row AFTER UPDATE ON bottles FOR EACH ROW BEGIN UPDATE read_only_bottles SET id = NEW.id, type = NEW.type, name = NEW.name, universe_id = NEW.universe_id; END;[0m
  [4;35;1mSQL (1.7ms)[0m   [0mCREATE TRIGGER clone_delete_bottles_row AFTER DELETE ON bottles FOR EACH ROW BEGIN DELETE FROM read_only_bottles WHERE id = OLD.id; END;[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mSHOW TABLES[0m
  [4;35;1mSQL (0.4ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.7ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;35;1mSQL (0.6ms)[0m   [0mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;36;1mSQL (0.6ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (18.2ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.2ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.3ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Orange Green Goodness', NULL, 1)[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.1ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('His Other Good Home', NULL, 1)[0m
  [4;35;1mSQL (0.5ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.1ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('The Drink Maker', NULL, 1)[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.1ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Viss Was Here', NULL, 1)[0m
  [4;35;1mSQL (0.5ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.1ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('And Here Too', NULL, 1)[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (1.7ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (4.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (2.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.3ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Orange Green Goodness', NULL, 1)[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.2ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('His Other Good Home', NULL, 1)[0m
  [4;35;1mSQL (0.4ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.1ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('The Drink Maker', NULL, 1)[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.2ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Viss Was Here', NULL, 1)[0m
  [4;35;1mSQL (0.9ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.4ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.2ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('And Here Too', NULL, 1)[0m
  [4;36;1mSQL (0.8ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (1.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;35;1mSQL (1.4ms)[0m   [0mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.2ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.3ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Orange Green Goodness', NULL, 1)[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.1ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('His Other Good Home', NULL, 1)[0m
  [4;35;1mSQL (0.4ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.1ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('The Drink Maker', NULL, 1)[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.1ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Viss Was Here', NULL, 1)[0m
  [4;35;1mSQL (0.4ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.1ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('And Here Too', NULL, 1)[0m
  [4;36;1mSQL (0.7ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (1.4ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (2.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;35;1mSQL (6.2ms)[0m   [0mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.5ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.3ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Orange Green Goodness', NULL, 1)[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.1ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('His Other Good Home', NULL, 1)[0m
  [4;35;1mSQL (0.5ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.1ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('The Drink Maker', NULL, 1)[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.2ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Viss Was Here', NULL, 1)[0m
  [4;35;1mSQL (0.4ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.1ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('And Here Too', NULL, 1)[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mMysql::Error: Table 'warren_test.read_only_bottles' doesn't exist: SELECT * FROM read_only_bottles WHERE MATCH (name) AGAINST ('good' IN BOOLEAN MODE)[0m
  [4;36;1mSQL (1.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.3ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.6ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (1.8ms)[0m   [0;1mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;35;1mSQL (4.2ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (4.5ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;35;1mSQL (0.9ms)[0m   [0mCREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (0.9ms)[0m   [0;1mCREATE TRIGGER clone_update_bottles_row AFTER UPDATE ON bottles FOR EACH ROW BEGIN UPDATE read_only_bottles SET id = NEW.id, type = NEW.type, name = NEW.name, universe_id = NEW.universe_id; END;[0m
  [4;35;1mSQL (0.9ms)[0m   [0mCREATE TRIGGER clone_delete_bottles_row AFTER DELETE ON bottles FOR EACH ROW BEGIN DELETE FROM read_only_bottles WHERE id = OLD.id; END;[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (1.3ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Orange Green Goodness', NULL, 1)[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.2ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('His Other Good Home', NULL, 1)[0m
  [4;35;1mSQL (0.4ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.2ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('The Drink Maker', NULL, 1)[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.2ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Viss Was Here', NULL, 1)[0m
  [4;35;1mSQL (0.4ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.2ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('And Here Too', NULL, 1)[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.3ms)[0m   [0mSELECT * FROM read_only_bottles WHERE MATCH (name) AGAINST ('good' IN BOOLEAN MODE)[0m
WARNING: Can't mass-assign these protected attributes: type, id
  [4;36;1mSQL (1.4ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.2ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.8ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (2.1ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (1.3ms)[0m   [0;1mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;35;1mSQL (4.8ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (4.5ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;35;1mSQL (0.8ms)[0m   [0mCREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (0.9ms)[0m   [0;1mCREATE TRIGGER clone_update_bottles_row AFTER UPDATE ON bottles FOR EACH ROW BEGIN UPDATE read_only_bottles SET id = NEW.id, type = NEW.type, name = NEW.name, universe_id = NEW.universe_id; END;[0m
  [4;35;1mSQL (1.3ms)[0m   [0mCREATE TRIGGER clone_delete_bottles_row AFTER DELETE ON bottles FOR EACH ROW BEGIN DELETE FROM read_only_bottles WHERE id = OLD.id; END;[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (1.0ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Orange Green Goodness', NULL, 1)[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.2ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('His Other Good Home', NULL, 1)[0m
  [4;35;1mSQL (0.4ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.2ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('The Drink Maker', NULL, 1)[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.2ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Viss Was Here', NULL, 1)[0m
  [4;35;1mSQL (0.7ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.2ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('And Here Too', NULL, 1)[0m
  [4;36;1mSQL (34.5ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mMysql::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NATURAL LANGUAGE MODE)' at line 1: SELECT * FROM read_only_bottles WHERE MATCH (name) AGAINST ('good' IN NATURAL LANGUAGE MODE)[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.6ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (5.9ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (4.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (1.2ms)[0m   [0;1mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;35;1mSQL (4.6ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (4.2ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;35;1mSQL (0.8ms)[0m   [0mCREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (0.9ms)[0m   [0;1mCREATE TRIGGER clone_update_bottles_row AFTER UPDATE ON bottles FOR EACH ROW BEGIN UPDATE read_only_bottles SET id = NEW.id, type = NEW.type, name = NEW.name, universe_id = NEW.universe_id; END;[0m
  [4;35;1mSQL (0.9ms)[0m   [0mCREATE TRIGGER clone_delete_bottles_row AFTER DELETE ON bottles FOR EACH ROW BEGIN DELETE FROM read_only_bottles WHERE id = OLD.id; END;[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (1.3ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Orange Green Goodness', NULL, 1)[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.2ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('His Other Good Home', NULL, 1)[0m
  [4;35;1mSQL (0.4ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.2ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('The Drink Maker', NULL, 1)[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.2ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Viss Was Here', NULL, 1)[0m
  [4;35;1mSQL (0.5ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.2ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('And Here Too', NULL, 1)[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mMysql::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NATURAL LANGUAGE MODE)' at line 1: SELECT * FROM read_only_bottles WHERE MATCH (name) AGAINST ('good' IN NATURAL LANGUAGE MODE)[0m
  [4;36;1mSQL (1.3ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (2.3ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (4.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (4.0ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.8ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (1.4ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.8ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (1.3ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.9ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (1.4ms)[0m   [0;1mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;35;1mSQL (6.1ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (4.8ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;35;1mSQL (3.1ms)[0m   [0mCREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (1.2ms)[0m   [0;1mCREATE TRIGGER clone_update_bottles_row AFTER UPDATE ON bottles FOR EACH ROW BEGIN UPDATE read_only_bottles SET id = NEW.id, type = NEW.type, name = NEW.name, universe_id = NEW.universe_id; END;[0m
  [4;35;1mSQL (1.0ms)[0m   [0mCREATE TRIGGER clone_delete_bottles_row AFTER DELETE ON bottles FOR EACH ROW BEGIN DELETE FROM read_only_bottles WHERE id = OLD.id; END;[0m
  [4;36;1mSQL (1.3ms)[0m   [0;1mSHOW TRIGGERS LIKE 'bottles'[0m
  [4;35;1mSQL (0.7ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;35;1mSQL (0.8ms)[0m   [0mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;35;1mSQL (0.5ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.2ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mSHOW TABLES[0m
  [4;35;1mSQL (1.4ms)[0m   [0mSHOW TRIGGERS LIKE 'bottles'[0m
  [4;36;1mSQL (3.8ms)[0m   [0;1mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;35;1mSQL (4.3ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (4.6ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;35;1mSQL (0.8ms)[0m   [0mCREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCREATE TRIGGER clone_update_bottles_row AFTER UPDATE ON bottles FOR EACH ROW BEGIN UPDATE read_only_bottles SET id = NEW.id, type = NEW.type, name = NEW.name, universe_id = NEW.universe_id; END;[0m
  [4;35;1mSQL (0.9ms)[0m   [0mCREATE TRIGGER clone_delete_bottles_row AFTER DELETE ON bottles FOR EACH ROW BEGIN DELETE FROM read_only_bottles WHERE id = OLD.id; END;[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mSHOW TABLES[0m
  [4;35;1mSQL (0.4ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.7ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;35;1mSQL (0.6ms)[0m   [0mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;36;1mSQL (0.6ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.7ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (1.2ms)[0m   [0;1mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;35;1mSQL (4.9ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (4.2ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;35;1mSQL (0.9ms)[0m   [0mCREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (0.9ms)[0m   [0;1mCREATE TRIGGER clone_update_bottles_row AFTER UPDATE ON bottles FOR EACH ROW BEGIN UPDATE read_only_bottles SET id = NEW.id, type = NEW.type, name = NEW.name, universe_id = NEW.universe_id; END;[0m
  [4;35;1mSQL (1.1ms)[0m   [0mCREATE TRIGGER clone_delete_bottles_row AFTER DELETE ON bottles FOR EACH ROW BEGIN DELETE FROM read_only_bottles WHERE id = OLD.id; END;[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (1.1ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Orange Green Goodness', NULL, 1)[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.5ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.3ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('His Other Good Home', NULL, 1)[0m
  [4;35;1mSQL (0.4ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.2ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('The Drink Maker', NULL, 1)[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.3ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Viss Was Here', NULL, 1)[0m
  [4;35;1mSQL (0.5ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.2ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('And Here Too', NULL, 1)[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (2.3ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (4.9ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;35;1mSQL (4.5ms)[0m   [0mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (1.1ms)[0m   [0;1mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;35;1mSQL (4.9ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (4.2ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;35;1mSQL (0.9ms)[0m   [0mCREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCREATE TRIGGER clone_update_bottles_row AFTER UPDATE ON bottles FOR EACH ROW BEGIN UPDATE read_only_bottles SET id = NEW.id, type = NEW.type, name = NEW.name, universe_id = NEW.universe_id; END;[0m
  [4;35;1mSQL (0.9ms)[0m   [0mCREATE TRIGGER clone_delete_bottles_row AFTER DELETE ON bottles FOR EACH ROW BEGIN DELETE FROM read_only_bottles WHERE id = OLD.id; END;[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (1.0ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Orange Green Goodness', NULL, 1)[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.2ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('His Other Good Home', NULL, 1)[0m
  [4;35;1mSQL (0.4ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.2ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('The Drink Maker', NULL, 1)[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.2ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Viss Was Here', NULL, 1)[0m
  [4;35;1mSQL (0.4ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.2ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('And Here Too', NULL, 1)[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (5.5ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (4.7ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.2ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.7ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (4.2ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (2.1ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (1.2ms)[0m   [0;1mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;35;1mSQL (4.4ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (4.5ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;35;1mSQL (1.1ms)[0m   [0mCREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCREATE TRIGGER clone_update_bottles_row AFTER UPDATE ON bottles FOR EACH ROW BEGIN UPDATE read_only_bottles SET id = NEW.id, type = NEW.type, name = NEW.name, universe_id = NEW.universe_id; END;[0m
  [4;35;1mSQL (0.9ms)[0m   [0mCREATE TRIGGER clone_delete_bottles_row AFTER DELETE ON bottles FOR EACH ROW BEGIN DELETE FROM read_only_bottles WHERE id = OLD.id; END;[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (1.1ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Orange Green Goodness', NULL, 1)[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.2ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('His Other Good Home', NULL, 1)[0m
  [4;35;1mSQL (0.5ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.2ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('The Drink Maker', NULL, 1)[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.2ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Viss Was Here', NULL, 1)[0m
  [4;35;1mSQL (0.5ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.2ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('And Here Too', NULL, 1)[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mMysql::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NATURAL LANGUAGE MODE)' at line 1: SELECT * FROM read_only_bottles WHERE MATCH (name) AGAINST ('good' IN NATURAL LANGUAGE MODE)[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (1.7ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (2.0ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (10.4ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (2.0ms)[0m   [0;1mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;35;1mSQL (5.1ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (4.4ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;35;1mSQL (0.9ms)[0m   [0mCREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (1.2ms)[0m   [0;1mCREATE TRIGGER clone_update_bottles_row AFTER UPDATE ON bottles FOR EACH ROW BEGIN UPDATE read_only_bottles SET id = NEW.id, type = NEW.type, name = NEW.name, universe_id = NEW.universe_id; END;[0m
  [4;35;1mSQL (1.0ms)[0m   [0mCREATE TRIGGER clone_delete_bottles_row AFTER DELETE ON bottles FOR EACH ROW BEGIN DELETE FROM read_only_bottles WHERE id = OLD.id; END;[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (1.1ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Orange Green Goodness', NULL, 1)[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.2ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('His Other Good Home', NULL, 1)[0m
  [4;35;1mSQL (0.4ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.2ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('The Drink Maker', NULL, 1)[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.2ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Viss Was Here', NULL, 1)[0m
  [4;35;1mSQL (0.5ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.2ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('And Here Too', NULL, 1)[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.0ms)[0m   [0mMysql::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NATURAL LANGUAGE MODE)' at line 1: SELECT * FROM read_only_bottles WHERE MATCH (name) AGAINST ('good' IN NATURAL LANGUAGE MODE);[0m
  [4;36;1mSQL (1.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.9ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.8ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (3.0ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (1.5ms)[0m   [0;1mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;35;1mSQL (4.9ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (4.7ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;35;1mSQL (1.1ms)[0m   [0mCREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCREATE TRIGGER clone_update_bottles_row AFTER UPDATE ON bottles FOR EACH ROW BEGIN UPDATE read_only_bottles SET id = NEW.id, type = NEW.type, name = NEW.name, universe_id = NEW.universe_id; END;[0m
  [4;35;1mSQL (0.9ms)[0m   [0mCREATE TRIGGER clone_delete_bottles_row AFTER DELETE ON bottles FOR EACH ROW BEGIN DELETE FROM read_only_bottles WHERE id = OLD.id; END;[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (1.2ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Orange Green Goodness', NULL, 1)[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.3ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.3ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('His Other Good Home', NULL, 1)[0m
  [4;35;1mSQL (0.4ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.2ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('The Drink Maker', NULL, 1)[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.2ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Viss Was Here', NULL, 1)[0m
  [4;35;1mSQL (0.5ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.2ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('And Here Too', NULL, 1)[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.2ms)[0m   [0mSELECT * FROM read_only_bottles WHERE MATCH (name) AGAINST ('good' IN BOOLEAN MODE)[0m
WARNING: Can't mass-assign these protected attributes: type, id
  [4;36;1mSQL (1.6ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (2.4ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (1.2ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (5.6ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (1.2ms)[0m   [0;1mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;35;1mSQL (4.5ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (4.3ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;35;1mSQL (0.9ms)[0m   [0mCREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (2.4ms)[0m   [0;1mCREATE TRIGGER clone_update_bottles_row AFTER UPDATE ON bottles FOR EACH ROW BEGIN UPDATE read_only_bottles SET id = NEW.id, type = NEW.type, name = NEW.name, universe_id = NEW.universe_id; END;[0m
  [4;35;1mSQL (1.4ms)[0m   [0mCREATE TRIGGER clone_delete_bottles_row AFTER DELETE ON bottles FOR EACH ROW BEGIN DELETE FROM read_only_bottles WHERE id = OLD.id; END;[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.2ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (2.8ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Orange Green Goodness', NULL, 1)[0m
  [4;36;1mSQL (32.6ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.3ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('His Other Good Home', NULL, 1)[0m
  [4;35;1mSQL (0.4ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.2ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('The Drink Maker', NULL, 1)[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.2ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Viss Was Here', NULL, 1)[0m
  [4;35;1mSQL (0.6ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.2ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('And Here Too', NULL, 1)[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.3ms)[0m   [0mSELECT * FROM read_only_bottles WHERE MATCH (name) AGAINST ('good*' IN BOOLEAN MODE)[0m
WARNING: Can't mass-assign these protected attributes: type, id
WARNING: Can't mass-assign these protected attributes: type, id
  [4;36;1mSQL (1.5ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (2.3ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (5.3ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (2.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.4ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (1.3ms)[0m   [0;1mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;35;1mSQL (5.0ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (4.3ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;35;1mSQL (0.9ms)[0m   [0mCREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (1.1ms)[0m   [0;1mCREATE TRIGGER clone_update_bottles_row AFTER UPDATE ON bottles FOR EACH ROW BEGIN UPDATE read_only_bottles SET id = NEW.id, type = NEW.type, name = NEW.name, universe_id = NEW.universe_id; END;[0m
  [4;35;1mSQL (2.1ms)[0m   [0mCREATE TRIGGER clone_delete_bottles_row AFTER DELETE ON bottles FOR EACH ROW BEGIN DELETE FROM read_only_bottles WHERE id = OLD.id; END;[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (1.6ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Orange Green Goodness', NULL, 1)[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.3ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('His Other Good Home', NULL, 1)[0m
  [4;35;1mSQL (2.2ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.3ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('The Drink Maker', NULL, 1)[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.2ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Viss Was Here', NULL, 1)[0m
  [4;35;1mSQL (0.5ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.2ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('And Here Too', NULL, 1)[0m
  [4;36;1mSQL (0.7ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.3ms)[0m   [0mSELECT * FROM read_only_bottles WHERE MATCH (name) AGAINST ('good*' IN BOOLEAN MODE)[0m
WARNING: Can't mass-assign these protected attributes: type, id
WARNING: Can't mass-assign these protected attributes: type, id
  [4;36;1mSQL (1.7ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (5.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (2.3ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.8ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.2ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mBottle Columns (1.7ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (1.2ms)[0m   [0;1mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;35;1mSQL (4.8ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (4.2ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;35;1mSQL (0.9ms)[0m   [0mCREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (0.9ms)[0m   [0;1mCREATE TRIGGER clone_update_bottles_row AFTER UPDATE ON bottles FOR EACH ROW BEGIN UPDATE read_only_bottles SET id = NEW.id, type = NEW.type, name = NEW.name, universe_id = NEW.universe_id; END;[0m
  [4;35;1mSQL (1.1ms)[0m   [0mCREATE TRIGGER clone_delete_bottles_row AFTER DELETE ON bottles FOR EACH ROW BEGIN DELETE FROM read_only_bottles WHERE id = OLD.id; END;[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.3ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (1.0ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Orange Green Goodness', NULL, 1)[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.2ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('His Other Good Home', NULL, 1)[0m
  [4;35;1mSQL (0.4ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.2ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('The Drink Maker', NULL, 1)[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.2ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Viss Was Here', NULL, 1)[0m
  [4;35;1mSQL (0.5ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.2ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('And Here Too', NULL, 1)[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mCOMMIT[0m
  [4;35;1mSQL (0.3ms)[0m   [0mSELECT * FROM read_only_bottles WHERE MATCH (name) AGAINST ('good*' IN BOOLEAN MODE)[0m
WARNING: Can't mass-assign these protected attributes: type, id
WARNING: Can't mass-assign these protected attributes: type, id
  [4;36;1mSQL (1.8ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (5.5ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.6ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.4ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (89.5ms)[0m   [0;1mSET SQL_AUTO_IS_NULL=0[0m
  [4;35;1mSQL (88.0ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (1.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;35;1mBottle Columns (369.3ms)[0m   [0mSHOW FIELDS FROM `bottles`[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (1.8ms)[0m   [0;1mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;35;1mSQL (63.1ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (4.7ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;35;1mSQL (18.6ms)[0m   [0mCREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (80.2ms)[0m   [0;1mCREATE TRIGGER clone_update_bottles_row AFTER UPDATE ON bottles FOR EACH ROW BEGIN UPDATE read_only_bottles SET id = NEW.id, type = NEW.type, name = NEW.name, universe_id = NEW.universe_id; END;[0m
  [4;35;1mSQL (39.5ms)[0m   [0mCREATE TRIGGER clone_delete_bottles_row AFTER DELETE ON bottles FOR EACH ROW BEGIN DELETE FROM read_only_bottles WHERE id = OLD.id; END;[0m
  [4;36;1mSQL (4.2ms)[0m   [0;1mSHOW TRIGGERS LIKE 'bottles'[0m
  [4;35;1mSQL (1.0ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;35;1mSQL (0.8ms)[0m   [0mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;35;1mSQL (0.3ms)[0m   [0mSHOW TABLES[0m
  [4;36;1mSQL (0.1ms)[0m   [0;1mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;35;1mSQL (0.1ms)[0m   [0mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mSHOW TABLES[0m
  [4;35;1mSQL (1.3ms)[0m   [0mSHOW TRIGGERS LIKE 'bottles'[0m
  [4;36;1mSQL (1.4ms)[0m   [0;1mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;35;1mSQL (4.2ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;36;1mSQL (4.4ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;35;1mSQL (0.9ms)[0m   [0mCREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;36;1mSQL (1.0ms)[0m   [0;1mCREATE TRIGGER clone_update_bottles_row AFTER UPDATE ON bottles FOR EACH ROW BEGIN UPDATE read_only_bottles SET id = NEW.id, type = NEW.type, name = NEW.name, universe_id = NEW.universe_id; END;[0m
  [4;35;1mSQL (0.9ms)[0m   [0mCREATE TRIGGER clone_delete_bottles_row AFTER DELETE ON bottles FOR EACH ROW BEGIN DELETE FROM read_only_bottles WHERE id = OLD.id; END;[0m
  [4;36;1mSQL (0.3ms)[0m   [0;1mSHOW TABLES[0m
  [4;35;1mSQL (0.4ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.7ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;35;1mSQL (1.0ms)[0m   [0mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
  [4;35;1mSQL (1.3ms)[0m   [0mCREATE TABLE `read_only_bottles` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `type` varchar(255), `name` varchar(255), `universe_id` int(11)) ENGINE MyISAM[0m
  [4;36;1mSQL (4.2ms)[0m   [0;1mCREATE FULLTEXT INDEX fulltext_name ON read_only_bottles (name(255));[0m
  [4;35;1mSQL (4.2ms)[0m   [0mCREATE FULLTEXT INDEX fulltext_type ON read_only_bottles (type(255));[0m
  [4;36;1mSQL (2.6ms)[0m   [0;1mCREATE TRIGGER clone_insert_bottles_row AFTER INSERT ON bottles FOR EACH ROW BEGIN INSERT INTO read_only_bottles (id, type, name, universe_id) VALUES (NEW.id, NEW.type, NEW.name, NEW.universe_id); END;[0m
  [4;35;1mSQL (1.4ms)[0m   [0mCREATE TRIGGER clone_update_bottles_row AFTER UPDATE ON bottles FOR EACH ROW BEGIN UPDATE read_only_bottles SET id = NEW.id, type = NEW.type, name = NEW.name, universe_id = NEW.universe_id; END;[0m
  [4;36;1mSQL (1.2ms)[0m   [0;1mCREATE TRIGGER clone_delete_bottles_row AFTER DELETE ON bottles FOR EACH ROW BEGIN DELETE FROM read_only_bottles WHERE id = OLD.id; END;[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (337.7ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Orange Green Goodness', NULL, 1)[0m
  [4;35;1mSQL (137.8ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.4ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('His Other Good Home', NULL, 1)[0m
  [4;36;1mSQL (0.5ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.2ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('The Drink Maker', NULL, 1)[0m
  [4;35;1mSQL (0.5ms)[0m   [0mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;36;1mSQL (0.1ms)[0m   [0;1mBEGIN[0m
  [4;35;1mBottle Create (0.5ms)[0m   [0mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('Viss Was Here', NULL, 1)[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mCOMMIT[0m
WARNING: Can't mass-assign these protected attributes: type
  [4;35;1mSQL (0.1ms)[0m   [0mBEGIN[0m
  [4;36;1mBottle Create (0.2ms)[0m   [0;1mINSERT INTO `bottles` (`name`, `type`, `universe_id`) VALUES('And Here Too', NULL, 1)[0m
  [4;35;1mSQL (0.5ms)[0m   [0mCOMMIT[0m
  [4;36;1mSQL (101.2ms)[0m   [0;1mSELECT * FROM read_only_bottles WHERE MATCH (name) AGAINST ('good*' IN BOOLEAN MODE)[0m
WARNING: Can't mass-assign these protected attributes: type, id
WARNING: Can't mass-assign these protected attributes: type, id
  [4;35;1mSQL (1.0ms)[0m   [0mDROP TABLE IF EXISTS read_only_bottles[0m
  [4;36;1mSQL (0.8ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_insert_bottles_row[0m
  [4;35;1mSQL (0.6ms)[0m   [0mDROP TRIGGER IF EXISTS clone_update_bottles_row[0m
  [4;36;1mSQL (0.4ms)[0m   [0;1mDROP TRIGGER IF EXISTS clone_delete_bottles_row[0m
